;                                   FILE E errors next for goto on > DBAS11

FNLINO LDY CURSOR
 BEQ FNLINO+5
 DEY
 JSR CLYADP
 CLR LOLINO
 CLR LOLINO+1
 LDX TXTP
 STX WORK+1
 CLR WORK
 LDY LINE+1
 CPYIM /BUFFER
 BEQ FNLINX
 LDX LINE
FIND JSR GETWRK
 CMPIM &0D
 BNE CHKA
 CPX WORK
 TYA
 SBC WORK+1
 BCC FNLINX
 JSR GETWRK
 ORAIM 0
 BMI FNLINX
 STA LOLINO+1
 JSR GETWRK
 STA LOLINO
 JSR GETWRK
CHKA CPX WORK
 TYA
 SBC WORK+1
 BCS FIND
FNLINX RTS
BREK LDXIM &FF
 STX BYTESM
 TXS
 INX
 LDYIM 0
 LDAIM &DA
 JSR OSBYTE
 LDAIM &7E
 JSR OSBYTE
 JSR FNLINO
 CLR TRFLAG
 LDAI REPPTR
 BNE BREKA ;not the fatal error
 JSR ORDERR
BREKA LDA ERRORH
 STA LINE
 LDA ERRORH+1
 STA LINE+1
 CLR CURSOR
 JSR SETVAR
 JMP STMT
ORDERR LDAIM BASERR
 STA ERRORH
 LDAIM /BASERR
 STA ERRORH+1
 RTS
BASERR = TREPORT,":",TIF,TERL,TPRINT,""" at line "";",TERL,":",TEND
 = TELSE,TPRINT,":",TEND,13
BEEP JSR ASEXPR
 LDXIM 3
BEEPLP LDA IACCL
 PHA
 LDA IACCM
 PHA
 PHX
 JSR INCMEX
 PLX
 DEX
 BNE BEEPLP
 JSR AEDONE
 LDA IACCL
 STA WORK+6
 LDA IACCM
 STA WORK+7
 LDYIM &07
 LDXIM &05
 BRA ENVELL
ENVEL JSR ASEXPR
 LDXIM &0D
ENVELP LDA IACCL
 PHA
 PHX
 JSR INCMEX
 PLX
 DEX
 BNE ENVELP
 JSR AEDONE
 LDA IACCL
 STA WORK+&0D
 LDXIM &0C
 LDYIM &08
ENVELL PLA
 STAAX WORK
 DEX
 BPL ENVELL
 TYA
 LDXIM WORK
 LDYIM 0
OSWNXT JSR OSWORD
 BRA WIDTHX
WIDTH JSR ASEXPR
 JSR AEDONE
 LDY IACCL
 DEY
 STY WIDTHV
WIDTHX JMP NXT
STORER JMP LETM
STEXPR JSR EXPR
STORE PLY
 PLX
 PLA
 STA WORK+2
 PLA
 STA WORK+1
 PLA
 STA WORK
 PHX
 PHY
STORF LDA WORK+2
 LSRA
 LDA TYPE
 BEQ STORER
 BCS STORFP
 BPL STORIN
 JSR IFIX
STORIN LDA IACCL
 STAI WORK
 LDA WORK+2
 BEQ STORDN
 LDA IACCM
 LDYIM 1
 STAIY WORK
 LDA IACCN
 INY
 STAIY WORK
 LDA IACCH
 INY
 STAIY WORK
STORDN RTS
STORFP BMI STORPF
 JSR IFLT
STORPF LDA FACCX
 STAI WORK
 LDYIM 1
 LDA FACCS
 EOR FACCMA
 ANDIM &80
 EOR FACCMA
 STAIY WORK
 INY
 LDA FACCMB
 STAIY WORK
 INY
 LDA FACCMC
 STAIY WORK
 INY
 LDA FACCMD
 STAIY WORK
 RTS
GOEDIT = "EDIT 12,2",13
 ASSERT TOP = &12
 ASSERT FSA = &2
EDIT JSR SETFSA ;overkill! (initialise FSA to TOP)
 LDAIM &80
 STA LISTOP
LISTGO CLR WORK+4 ;FOR count
 CLR WORK+5 ;REPEAT count
 JSR FALSE
 JSR SPTSTN
 PHP
 JSR PHACC
 JSR TRUE
 LSR IACCM
 PLP
 BCC NONUML
 JSR CHKCOM
 BEQ GOTCX
 JSR POPACC
 JSR PHACC
 DEC CURSOR
 BRA GOTCFF
NONUML JSR CHKCOM
 BEQ GOTCX
 DEC CURSOR
GOTCX JSR SPTSTN
GOTCFF LDXIM FACCMA
 JSR ACCTOM ;MA,MB:=IL,IM
 JSR SPACES
 CMPIM TIF
 BNE LISTEF
 JSR SPACES
 JSR CLYADP
 BRA LISTEG
LIST INY
 LDAIY LINE
 CMPIM "O" ;listo command ?
 BNE LISTGO
 INC CURSOR
 JSR ASEXPR
 JSR DONE
 LDA IACCL
 STA LISTOP
 JMP CLRSTK;LISTEF-3
LISTEF JSR DONET
LISTEG LDA LINE
 STA AELINE ;pointer to search string as offset from buffer
 JSR ENDER
 JSR POPACC
 JSR FNDLNO
 LDA WORK+6
 STA LINE
 LDA WORK+7
 STA LINE+1
 BCS LIMTST
 DEY
 BRA GETNUM
ENDLN JSR CHOUT
 BIT LISTOP
 BMI GETNEW
 LDAIM 10
 JSR OSWRCH
GETNEW JSR CLYADP
GETNUM LDAIY LINE
 STA IACCM
 INY
 LDAIY LINE
 STA IACCL
LIMTST LDA IACCL
 CLC
 SBC FACCMA
 LDA IACCM
 SBC FACCMB
 BCC LTTEST
 BIT LISTOP
 BPL LISTEF-3;exit normally if list
 LDXIM GOEDIT
 LDYIM /GOEDIT
 JMP OSCLI
LTTEST CLR COEFP
 CLR COEFP+1 ;don't list line
 LDYIM 4
 STY CURSOR
 STY AECUR
 BIT WORK+4
 BPL .+4
 CLR WORK+4
 BIT WORK+5
 BPL LTLOOP
 CLR WORK+5
LTLOOP LDAIY LINE
 CMPIM &0D
 BEQ CHKLST
 CMPIM TREM
 BEQ LTLOOK
 CMPIM """"
 BNE LTLOOM
 EOR COEFP
LTLOOK STA COEFP ;flip the look at tokens for FOR,REPEAT status
LTLOOM LDX COEFP
 BNE LPSIMT ;check if looking at tokens
 CMPIM TNEXT
 BNE LPSIMR
 DEC WORK+4
LPSIMR CMPIM TUNTIL
 BNE LPSIMT
 DEC WORK+5
LPSIMT LDX AELINE
LTMATC LDAAX BUFFER
 CMPIM &0D
 BEQ LTMATD
 CMPIY LINE
 BNE LTNOTN
 INY
 INX
 BRA LTMATC
ENDLNJ BRA ENDLN
LTMATD STA COEFP+1 ;say line can be listed (A=13)
LTNOTN INC AECUR
 LDY AECUR
 BRA LTLOOP
CHKLST LDA COEFP+1
 BEQ GETNEW
 JSR NPRN
 LDAIM 1
 INX ;X=0
 SEC ;1/2
 JSR LISTPS
 LDX WORK+4
 LDAIM 2
 JSR LISTPS-1
 LDX WORK+5
 LDAIM 4
 JSR LISTPS-1
 CLR COEFP
LPX LDY CURSOR
LP LDAIY LINE
 CMPIM &0D
 BEQ ENDLNJ
 CMPIM """"
 BNE LPTOKS
 EOR COEFP
 STA COEFP
 LDAIM """"
LPQUOT JSR CHOUT
 INY
 BRA LP
LPTOKS LDX COEFP
 BNE LPQUOT
 CMPIM TCONST
 BNE LPSIMP
 JSR SPGETN
 STY CURSOR
 JSR POSITE
 BRA LPX
LPSIMP CMPIM TFOR
 BNE LPSIMQ
 INC WORK+4
LPSIMQ CMPIM TREPEAT
 BNE LPSIMS
 INC WORK+5
LPSIMS CMPIM TREM
 BNE LPSIMZ
 STA COEFP ;make sure that no more tokens on line will be listed
LPSIMZ JSR TOKOUT
 INY
 BRA LP
NEXT JSR AELV
 BNE STRIPA
 LDX FORSTP
 BEQ NEXER
 BCS NOCHK
NEXHOW JMP STDED
STRIPA BCS NEXHOW
 LDX FORSTP
 BEQ NEXER
STRIP LDA IACCL
 CMPAX FORINL-&F
 BNE NOTIT
 LDA IACCM
 CMPAX FORINH-&F
 BNE NOTIT
 LDA IACCN
 CMPAX FORINT-&F
 BEQ NOCHK
NOTIT TXA
 SEC
 SBCIM &0F
 TAX
 STX FORSTP
 BNE STRIP
 BRK
 = &21
 = "Can't match ",TFOR
NEXER BRK
 = &20
 = "No ",TFOR
 BRK
NOCHK LDAAX FORINL-&F
 STA IACCL
 LDAAX FORINH-&F
 STA IACCM
 LDYAX FORINT-&F
 CPYIM &05
 BEQ FNEXT
 LDAI IACCL
 ADCAX FORSPL-&F
 STAI IACCL
 STA WORK
 LDYIM 1
 LDAIY IACCL
 ADCAX FORSPM-&F
 STAIY IACCL
 STA WORK+1
 INY
 LDAIY IACCL
 ADCAX FORSPN-&F
 STAIY IACCL
 STA WORK+2
 INY
 LDAIY IACCL
 ADCAX FORSPH-&F
 STAIY IACCL
 TAY
 LDA WORK
 SEC
 SBCAX FORLML-&F
 STA WORK
 LDA WORK+1
 SBCAX FORLMM-&F
 TSB WORK;WORK=WORK OR A
 LDA WORK+2
 SBCAX FORLMN-&F
 TSB WORK;WORK=WORK OR A
 TYA
 SBCAX FORLMH-&F
 ORA WORK;and so ORs all 4 bytes together
 BEQ NOTFIN
 TYA
 EORAX FORSPH-&F
 EORAX FORLMH-&F
 BPL FORDRN
 BCS NOTFIN
 BRA FINFOR
FORDRN BCS FINFOR
NOTFIN LDYAX FORADL-&F
 LDAAX FORADH-&F
 STY LINE
 STA LINE+1
 JSR SECUR
 JMP STMT
FINFOR TXA
 SEC
 SBCIM &0F
 STA FORSTP
 LDY AECUR
 STY CURSOR
 JSR CHKCOM
 BNE NXTFIN
 JMP NEXT
FNEXT JSR VARFP ;X maintained
 TXA
 CLC
 ADCIM FORSPL-&F
 STA ARGP
 LDAIM /FORSPL
 STA ARGP+1
 JSR FADD ;X smashed
 LDA IACCL
 STA WORK
 LDA IACCM
 STA WORK+1
 JSR STORPF ;X maintained
 LDX FORSTP
 TXA
 CLC
 ADCIM FORLML-&F
 STA ARGP ;argp+1=/FORSPL=/FORLML
 JSR FCMP
 BEQ NOTFIN
 LDAAX FORSPL-&E
 BMI FFORDR
 BCS NOTFIN
 BRA FINFOR
FFORDR BCC NOTFIN
 BRA FINFOR
NXTFIN JMP SUNK
FORCV BRK
 = &22
 = TFOR," variable"
FORDP BRK
 = &23
 = "Too many ",TFOR,"s"
FORTO BRK
 = &24
 = "No ",TTO
 BRK
FOR JSR CRAELV
 BEQ FORCV
 BCS FORCV
 JSR PHADDR
 JSR EQEAT
 JSR STEXPR
 JSR AESPAC
 CMPIM TTO
 BNE FORTO
 LDY FORSTP
 CPYIM FORTOP
 BCS FORDP
 TYA
 ADCIM &0F ;carry clear
 STA FORSTP
 LDA WORK
 STAAY FORINL
 LDA WORK+1
 STAAY FORINH
 LDA WORK+2
 STAAY FORINT
 CMPIM &05
 BEQ FFOR
 JSR INEXPR
 LDY FORSTP
 LDA IACCL
 STAAY FORLML-&F
 LDA IACCM
 STAAY FORLMM-&F
 LDA IACCN
 STAAY FORLMN-&F
 LDA IACCH
 STAAY FORLMH-&F
 LDAIM 1
 JSR SINSTK
 JSR AESPAC
 CMPIM TSTEP
 BNE FORSTW
 JSR INEXPR
 LDY AECUR
FORSTW STY CURSOR
 LDY FORSTP
 LDA IACCL
 STAAY FORSPL-&F
 LDA IACCM
 STAAY FORSPM-&F
 LDA IACCN
 STAAY FORSPN-&F
 LDA IACCH
 STAAY FORSPH-&F
FORN JSR FORR
 LDY FORSTP
 LDA LINE
 STAAY FORADL-&F
 LDA LINE+1
 STAAY FORADH-&F
 JMP STMT
FFOR JSR EXPR
 JSR FLOATI
 LDA FORSTP
 CLC
 ADCIM FORLML-&F
 STA ARGP
 LDAIM /FORLML
 STA ARGP+1
 JSR FSTA
 JSR FONE
 JSR AESPAC
 CMPIM TSTEP
 BNE FFORST
 JSR EXPR
 JSR FLOATI
 LDY AECUR
FFORST STY CURSOR
 LDA FORSTP
 CLC
 ADCIM FORSPL-&F
 STA ARGP
 LDAIM /FORSPL
 STA ARGP+1
 JSR FSTA
 BRA FORN
GOSUB JSR GOFACT
ONGOSB JSR DONE
 LDY SUBSTP
 CPYIM SUBTOP
 BCS GOSDP
 LDA LINE
 STAAY SUBADL
 LDA LINE+1
 STAAY SUBADH
 INC SUBSTP
 BRA GODONE
GOSDP BRK
 = &25
 = "Too many ",TGOSUB,"s"
RETNUN BRK
 = &26
 = "No ",TGOSUB
 BRK
RETURN JSR DONE
 LDX SUBSTP
 BEQ RETNUN
 DEC SUBSTP
 LDYAX SUBADL-1
 LDAAX SUBADH-1
 STY LINE
 STA LINE+1
RETURX JMP NXT
GOTO JSR GOFACT
 JSR DONE
GODONE LDA TRFLAG
 BEQ GONO
 JSR TRJOBA
GONO LDYIM 4
 STY CURSOR
 LDY WORK+6
 LDA WORK+7
JUMPAY STY LINE
 STA LINE+1
 JMP STMT
ONERGF JSR DONE
 JSR ORDERR
 BRA RETURX
ONERRG JSR SPACES
 CMPIM TOFF
 BEQ ONERGF
 LDY CURSOR
 DEY
 JSR CLYADP
 CLR CURSOR
 LDA LINE
 STA ERRORH
 LDA LINE+1
 STA ERRORH+1
 JMP REM
ON JSR SPACES
 CMPIM TERROR
 BEQ ONERRG
 DEC CURSOR
 JSR ASEXPR
 CPXIM TPROC
 BEQ ONOK
 INY
 CPXIM TGOTO
 BEQ ONOK
 CPXIM TGOSUB
 BNE ONER
ONOK PHX
 LDA IACCM
 ORA IACCN
 ORA IACCH
 BNE ONRG
 DEC IACCL
 BEQ ONGOT
 BMI ONRG
; IACCM,IACCN=0
ONSRCH LDAIY LINE
 CMPIM &0D
 BEQ ONRG
 CMPIM ":"
 BEQ ONRG
 CMPIM TELSE
 BEQ ONRG
 INY
 CMPIM """"
 BNE ONSRCC
 EOR IACCM
 STA IACCM
ONSRCC LDX IACCM
 BNE ONSRCH ;don't look inside string
 CMPIM ")"
 BNE ONSRCA
 DEC IACCN
ONSRCA CMPIM "("
 BNE ONSRCB
 INC IACCN
ONSRCB CMPIM ","
 BNE ONSRCH
 LDX IACCN
 BNE ONSRCH
 DEC IACCL
 BNE ONSRCH
ONGOT PLA
 CMPIM TPROC
 BEQ ONPROC
 STY CURSOR
 CMPIM TGOSUB
 BEQ ONGOS
 JSR GOFACT
 JSR SECUR
 JMP GODONE
ONGOS JSR GOFACT
 LDY CURSOR
 JSR ONSKIP+1
 JMP ONGOSB
ONRG PLA
ONELSE LDAIY LINE
 INY
 CMPIM TELSE
 BEQ ONELS
 CMPIM &0D
 BNE ONELSE
 BRK
 = &28
 = TON," range"
ONER BRK
 = &27
 = TON," syntax"
NOLINE BRK
 = &29
 = "No such line"
 BRK
ONPROC STY AECUR
 JSR AESPAC
 CMPIM TPROC
 BNE ONER
 JSR FNBODY
 LDY AECUR
 JSR ONSKIP+1
 JMP DONEXT
ONELS STY CURSOR
 JMP THENLN
ONSKIP INY
 LDAIY LINE;find end of ON stmt
 CMPIM &0D
 BEQ SKIPED
 CMPIM ":"
 BNE ONSKIP
SKIPED STY CURSOR
 RTS
GOFACT JSR SPTSTN
 BCS GOTGO
 JSR ASEXPR
 LDAIM &80
 TRB IACCM
GOTGO JSR FNDLNO
 BCC NOLINE
 RTS
 LNK DBAS12
